{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Рекомендация тарифов"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В нашем распоряжении данные о поведении клиентов, которые уже перешли на эти тарифы. Нужно построить модель для задачи классификации, которая выберет подходящий тариф. Предобработка данных не понадобится — мы её уже сделали заранее.\n",
    "\n",
    "Построим модель с максимально большим значением *accuracy*. Нужно довести долю правильных ответов по крайней мере до 0.75. Проверим *accuracy* на тестовой выборке самостоятельно."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Откройте и изучите файл"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Импортируем библиотеку Pandas.\n",
    "import pandas as pd\n",
    "# Импортируем библиотеку для постраения графиков matplotlib.pyplot.\n",
    "import matplotlib.pyplot as plt\n",
    "# Импортируем библиотеку для постраения графиков seaborn.\n",
    "import seaborn as sns\n",
    "# Импортируем библиотеку для высокоуровневых математических функций numpy.\n",
    "import numpy as np\n",
    "import math\n",
    "# Импортируем библиотеки машинного обучения \n",
    "from scipy import stats as st \n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn.metrics import accuracy_score \n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.dummy import DummyClassifier\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Прочитаем исходные DataFrame.\n",
    "try:\n",
    "    df = pd.read_csv('/datasets/users_behavior.csv')\n",
    "except:\n",
    "    df = pd.read_csv('users_behavior.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>calls</th>\n",
       "      <th>minutes</th>\n",
       "      <th>messages</th>\n",
       "      <th>mb_used</th>\n",
       "      <th>is_ultra</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>40.0</td>\n",
       "      <td>311.90</td>\n",
       "      <td>83.0</td>\n",
       "      <td>19915.42</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>85.0</td>\n",
       "      <td>516.75</td>\n",
       "      <td>56.0</td>\n",
       "      <td>22696.96</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>77.0</td>\n",
       "      <td>467.66</td>\n",
       "      <td>86.0</td>\n",
       "      <td>21060.45</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>106.0</td>\n",
       "      <td>745.53</td>\n",
       "      <td>81.0</td>\n",
       "      <td>8437.39</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>66.0</td>\n",
       "      <td>418.74</td>\n",
       "      <td>1.0</td>\n",
       "      <td>14502.75</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   calls  minutes  messages   mb_used  is_ultra\n",
       "0   40.0   311.90      83.0  19915.42         0\n",
       "1   85.0   516.75      56.0  22696.96         0\n",
       "2   77.0   467.66      86.0  21060.45         0\n",
       "3  106.0   745.53      81.0   8437.39         1\n",
       "4   66.0   418.74       1.0  14502.75         0"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Выведем data frame\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Опишим данные<br>\n",
    "**calls** - количесво звонков<br>\n",
    "**minutes** — суммарная длительность звонков в минутах<br>\n",
    "**messages** — количество sms-сообщений<br>\n",
    "**mb_used** — израсходованный интернет-трафик в Мб<br>\n",
    "**is_ultra** - каким тарифом пользовался в течение месяца («Ультра» — 1, «Смарт» — 0)<br>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Проведем корреляционный анализ факторов и построим график.\n",
    "plt.scatter(df['calls'], df['minutes'], alpha=0.5)\n",
    "plt.title('Корреляция количесва звонков и потраченных минут')\n",
    "plt.xlabel('Количество звонков')\n",
    "plt.ylabel('Потраченные минуты')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9820832355742289"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['calls'].corr(df['minutes'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы видим, что количесво звонков очень сильно зависят от потраченным минутам (0.98). Данные факторы практически идентичны. От одного из них мы можем далее избавиться."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df['minutes'], df['messages'])\n",
    "plt.title('Корреляция количесва звонков и потраченных минут')\n",
    "plt.xlabel('Потраченные минуты')\n",
    "plt.ylabel('Потраченные sms')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.17311022580969082"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['minutes'].corr(df['messages'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы наблюдаем, что потраченные минуты и потраченные sms пратически не зависят друг от друга."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df['minutes'], df['mb_used'])\n",
    "plt.title('Корреляция количесва звонков и потраченных минут')\n",
    "plt.xlabel('Потраченные минуты')\n",
    "plt.ylabel('Потраченные mb')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.28096693508821474"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['minutes'].corr(df['mb_used'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы наблюдаем, что потраченные минуты и потраченные mb пратически не зависят друг от друга."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df['messages'], df['mb_used'])\n",
    "plt.title('Корреляция количесва звонков и потраченных минут')\n",
    "plt.xlabel('Потраченные sms')\n",
    "plt.ylabel('Потраченные mb')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.19572112095582156"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['messages'].corr(df['mb_used'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы наблюдаем, что потраченные sms и потраченные mb пратически не зависят друг от друга."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Мы можем наблюдать два очень схожих признака. Это calls - количесво звонков и minutes — суммарная длительность звонков в минутах. Можно предположить, что мы могли бы избавиться от одного из них. Думаю, избавиться от calls будет корректней, так как более важно сколько минут клиет тратить на звонки, чем количесво звонков."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Разбейте данные на выборки"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Извлечем признаки\n",
    "features = df.drop(['is_ultra','calls'], axis=1)\n",
    "target = df['is_ultra']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Разделим обучающую, валидационную и тестовую выборки\n",
    "features_train, features_temp, target_train, target_temp = train_test_split(\n",
    "    features, target, test_size=0.40, random_state=12345)\n",
    "features_valid, features_test, target_valid, target_test = train_test_split(\n",
    "    features_temp, target_temp, test_size=0.50, random_state=12345)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Размер выборки train: 1928\n",
      "Размер выборки valid: 643\n",
      "Размер выборки test: 643\n"
     ]
    }
   ],
   "source": [
    "print('Размер выборки train:', features_train.shape[0])\n",
    "print('Размер выборки valid:', features_valid.shape[0])\n",
    "print('Размер выборки test:', features_valid.shape[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Исследуйте модели"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Исследуем модель \"Решающие дерево\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier()"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Обучим модель \"Решающие дерево\"\n",
    "model_tree = DecisionTreeClassifier() # Применим модель \"Решающие дерево\"\n",
    "model_tree.fit(features_train, target_train) # Обучим модель на тренинговой выборке"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "max_depth = 1 : 0.7542768273716952\n",
      "max_depth = 2 : 0.7822706065318819\n",
      "max_depth = 3 : 0.7853810264385692\n",
      "max_depth = 4 : 0.7884914463452566\n",
      "max_depth = 5 : 0.7884914463452566\n",
      "max_depth = 6 : 0.7744945567651633\n",
      "max_depth = 7 : 0.7713841368584758\n",
      "max_depth = 8 : 0.7744945567651633\n",
      "max_depth = 9 : 0.7791601866251944\n",
      "max_depth = 10 : 0.7698289269051322\n"
     ]
    }
   ],
   "source": [
    "# Изменим гиперпараметры для поиска лучшй модели по валидационной выборке\n",
    "for depth in range(1,11):\n",
    "    model_tree = DecisionTreeClassifier(random_state=12345, max_depth=depth)\n",
    "    model_tree.fit(features_train, target_train)\n",
    "    predictions_valid = model_tree.predict(features_valid)\n",
    "    print(\"max_depth =\", depth, \": \", end='')\n",
    "    print(accuracy_score(target_valid, predictions_valid))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "Мы видим, что наилучший показатель Accuracy= 0.788 для модели \"Решающие дерево\" с 4 и 5 ветками. Будем использовать для тестовой выборки модель с 4 ветками, чтоб модель работала более быстро."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Исследуем модель \"Случайный лес\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(n_estimators=3, random_state=12345)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Обучим модель \"Случайный лес\"\n",
    "model_forest = RandomForestClassifier(random_state=12345, n_estimators=3) # Применим модель \"Случайный лес\" и возьмем 3 дерева\n",
    "model_forest.fit(features_train, target_train) # Обучим модель на тренинговой выборке\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Лучшая модель на валидационной выборке: n_estimators= 16 depth= 8 accuracy: 0.7978227060653188\n"
     ]
    }
   ],
   "source": [
    "accur=0\n",
    "est=0\n",
    "dep=0\n",
    "for estim in range(1, 50, 5):\n",
    "    for depth in range (1,11):\n",
    "        model_forest = RandomForestClassifier(random_state=12345, n_estimators=estim, max_depth=depth)\n",
    "        model_forest.fit(features_train, target_train)\n",
    "        valid_predictions = model_forest.predict(features_valid)\n",
    "        accuracy = accuracy_score(target_valid, valid_predictions)\n",
    "        if accuracy > accur:\n",
    "            accur=accuracy\n",
    "            est=estim\n",
    "            dep=depth\n",
    "print('Лучшая модель на валидационной выборке: ' \"n_estimators=\", est, \"depth=\", dep, 'accuracy:', accur)            "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "Мы видим, что наилучший показатель Accuracy=0.797 для модели \"Случайный лес\" с 16 Деревьями и 8 ветвями. Его и будем использовать для тестовой выборки."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Исследуем модель \"Логистическая регрессия\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression(random_state=12345)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Обучим модель \"Логистическая регрессия\"\n",
    "model_log = LogisticRegression(random_state=12345)\n",
    "model_log.fit(features_train, target_train) # Обучим модель на тренинговой выборке"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy модели логистической регрессии на валидационной выборке: 0.7076205287713841\n"
     ]
    }
   ],
   "source": [
    "result = model_log.score(features_valid, target_valid)\n",
    "print(\"Accuracy модели логистической регрессии на валидационной выборке:\", result)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "Мы видим, показатель Accuracy = 0.707 для модели \"Логистическая регрессия\". Так же его проверим на тестовой выборке."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Проверьте модель на тестовой выборке"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Объединим две выборки train и valid в одну для обучения модели\n",
    "features_new = features_train.append(features_valid).reset_index(drop=True)\n",
    "target_new = target_train.append(target_valid).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy модели решающие дерево на тестовой выборке: 0.7729393468118196\n"
     ]
    }
   ],
   "source": [
    "# Проверим лучшую модель \"Решающего дерева\" на тестовой выборке\n",
    "model_tree = DecisionTreeClassifier(random_state=12345, max_depth=4) # Зададим параметр max_depth=4\n",
    "model_tree.fit(features_new, target_new) # Обучим нашу маодельна тренинговой выборке\n",
    "predictions_test_tree = model_tree.predict(features_test) # Сделаем предсказания нашей моделью\n",
    "result_tree = model_tree.score(features_test, target_test) # Найдем результат Accuracy\n",
    "print(\"Accuracy модели решающие дерево на тестовой выборке:\", result_tree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy модели случайный лес на тестовой выборке: 0.8087091757387247\n"
     ]
    }
   ],
   "source": [
    "# Проверим лучшую модель \"Случайного леса\" на тестовой выборке\n",
    "model_forest = RandomForestClassifier(random_state=12345, n_estimators=16, max_depth=8) # Зададим параметр max_depth=8 и n_estimators=16\n",
    "model_forest.fit(features_new, target_new) # Обучим нашу маодельна тренинговой выборке\n",
    "predictions_test_forest = model_forest.predict(features_test) # Сделаем предсказания нашей моделью\n",
    "result_forest = model_forest.score(features_test, target_test) # Найдем результат Accuracy\n",
    "print(\"Accuracy модели случайный лес на тестовой выборке:\", result_forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy модели логистической регрессии на тестовой выборке: 0.6920684292379471\n"
     ]
    }
   ],
   "source": [
    "# Проверим лучшую модель \"Логистической регрессии\" на тестовой выборке\n",
    "model_log = LogisticRegression(random_state=12345, solver='liblinear')\n",
    "model_log.fit(features_new, target_new) # Обучим нашу маодельна тренинговой выборке\n",
    "predictions_test_log = model_log.predict(features_test) # Сделаем предсказания нашей моделью\n",
    "result_log = model_log.score(features_test, target_test) # Найдем результат Accuracy\n",
    "print(\"Accuracy модели логистической регрессии на тестовой выборке:\", result_log)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Вывод\n",
    "Тестируя 3 модели (Решающие дерево, Случайный лес и Логистическая регрессия) мы видим, что максиммальную точность показала модель Случайный лес с параметрами параметр max_depth=8 и n_estimators=16, которые мы определили на валидационной выборке. Доля правильных ответов составляет 81%. Хуже всего справилась логистическая регрессия, где доля верных ответов составляла 69%. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Проверьте модели на адекватность"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.6842923794712286\n"
     ]
    }
   ],
   "source": [
    "dummy_clf = DummyClassifier(strategy=\"most_frequent\", random_state=12345)\n",
    "dummy_clf.fit(features_train, target_train)\n",
    "dummy_clf.predict(features_test)\n",
    "result_dum = dummy_clf.score(features_test, target_test)\n",
    "print(result_dum)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Попробовал найти информацию в интернете по проверки моделей. Нашел данный вариант, но не совсем разобрался верно ли я с ним работаю.\n",
    "Данный результат 0.68 для себя интропретировал так, что мои модели являются адекватными, так как их показатели превышают данный. Прошу поделиться информацией, где я могу более подробно это разобрать и сделать более точный вывод."
   ]
  }
 ],
 "metadata": {
  "ExecuteTimeLog": [
   {
    "duration": 1992,
    "start_time": "2022-02-15T15:14:46.142Z"
   },
   {
    "duration": 21,
    "start_time": "2022-02-15T15:14:48.136Z"
   },
   {
    "duration": 13,
    "start_time": "2022-02-15T15:14:48.159Z"
   },
   {
    "duration": 4,
    "start_time": "2022-02-15T15:15:13.936Z"
   },
   {
    "duration": 8,
    "start_time": "2022-02-15T15:15:14.338Z"
   },
   {
    "duration": 15,
    "start_time": "2022-02-15T15:15:49.765Z"
   },
   {
    "duration": 30,
    "start_time": "2022-02-15T15:15:50.404Z"
   },
   {
    "duration": 19,
    "start_time": "2022-02-15T15:16:22.582Z"
   },
   {
    "duration": 5894,
    "start_time": "2022-02-15T15:16:23.276Z"
   },
   {
    "duration": 15,
    "start_time": "2022-02-15T15:16:51.975Z"
   },
   {
    "duration": 347,
    "start_time": "2022-02-15T15:16:53.517Z"
   },
   {
    "duration": 5,
    "start_time": "2022-02-15T15:17:43.313Z"
   },
   {
    "duration": 10,
    "start_time": "2022-02-15T15:18:54.907Z"
   },
   {
    "duration": 87,
    "start_time": "2022-02-15T15:18:56.116Z"
   },
   {
    "duration": 16,
    "start_time": "2022-02-15T15:18:56.805Z"
   },
   {
    "duration": 9,
    "start_time": "2022-02-15T15:20:38.182Z"
   }
  ],
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {
    "height": "calc(100% - 180px)",
    "left": "10px",
    "top": "150px",
    "width": "217px"
   },
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
